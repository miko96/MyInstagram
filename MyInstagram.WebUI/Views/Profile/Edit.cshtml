@model MyInstagram.Data.Entities.UserProfile

@{
    ViewBag.Title = "Edit Profile";
}

<h2>Edit Profile</h2>

@using (Html.BeginForm("Edit", "Profile",
                                    FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-horizontal">
        <hr />
        <div class="col-md-offset-5 col-md-7">
            @Html.ValidationSummary(true)
        </div>
        @Html.HiddenFor(model => model.UserId)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-3" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-3" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-offset-2 col-md-3" for="profileimageinput">Profile Image</label>
            <div class="col-md-3">
                <input type="file" name="profileImage" id="profileimageinput" multiple accept='image/*' onchange="CheckFileSize()">
                <span id="inputfileerror" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-3" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.Sex,
                                         new SelectList(new List<SelectListItem>
                                         {
                                            new SelectListItem { Text = "i don't know", Value = ""},
                                            new SelectListItem { Text = "Male", Value = "Male"},
                                            new SelectListItem { Text = "Female", Value = "Female"}
                                         }, "Value", "Text"),
                                         htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-3" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            <div class="col-md-offset-5 col-md-7">
                <input id="profileimagesbbtn" type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
